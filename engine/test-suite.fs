(  ---------------------------------------------------------  )
(                                                             )
(              Forthkit FORTH-79 Test Suite                   )
(                                                             )
(                                                             )
(  This file is based on the work of many other people, to    )
(  which I am adding a small contribution. If you find this   )
(  useful and make changes, please also share it with the     )
(  world at large[1].                                         )
(                                                             )
(  In particular, this uses a simplification of the standard  )
(  test harness[2], parts of John Hayes'[3] and Gerry         )
(  Jackson's[4] test suites, including innumerable details    )
(  from The Forth Standard website[5], which credits David    )
(  Williams and the members of the Forth 200x committee[6].   )
(                                                             )
(  [1] https://www.gnu.org/licenses/gpl-3.0.en.html           )
(  [2] http://www.forth200x.org/tests/ttester.fs              )
(  [3] https://www.taygeta.com/forth.html                     )
(  [4] http://soton.mpeforth.com/flag/anstests/index.html     )
(  [5] https://forth-standard.org                             )
(  [6] https://forth-standard.org/standard/testsuite          )
(                                                             )
(  This file is formatted into screens of 16 line groups,     )
(  each 64 characters long. Each is a "block" in terms of the )
(  FORTH-79 standard. The first three blocks -- 0, 1 and 2 -- )
(  contain introductory comments. The following blocks hold   )
(  a few definitions not present in FORTH-79, the test        )
(  harness, and then the remaining blocks contain the tests   )
(  themselves. To run the test suite, start f79 with this     )
(  file as the mass storage and then execute                  )
(                                                             )
(     4 load run-all-tests                                    )
(                                                             )
(  To run just a part of the test suite, first load block 4,  )
(  then find the relevant block in the block contents below   )
(  and load that. Loading a test suite block will run the     )
(  tests in the block.                                        )
(                                                             )
(  Block Contents:                                            )
(    0-3 Title, credits, license, contents                    )
(    4   cell cells <> -->                                    )
(    5   start-depth actual-depth actual-results              )
(    6   t{ ->                                                )
(    7   check-results                                        )
(    8   }t                                                   )
(    9   run-all-tests                                        )
(   10   harness tests                                        )
(   11   and not                                              )
(   12   comments tick                                        )
(   13   *                                                    )
(   14   +                                                    )
(   15   here , ! @                                           )
(   16   here , ! @ [continued]                               )
(   17   +!                                                   )
(   18   +loop                                                )
(   19   +loop [continued]                                    )
(   20   +loop [continued]                                    )
(   21   +loop [continued]                                    )
(                                                             )
(                                                             )
(                                                             )
(                                                             )
(  ---------------------------------------------------------  )
(  Supplemental Words                                         )
(                                                             )
(  FORTH-79 doesn't have the words "cell" or "cells", since   )
(  since the cell size was defined to be 16 bits. Forthkit    )
(  supports compiling f79 with 16, 32, or 64 bit words.       )
                                                            ( )
here 0 , here - dup allot negate constant cell              ( )
                                                            ( )
: cell+ cell + ;                                            ( )
: cells cell * ;                                            ( )
                                                            ( )
: <> = 0= ;                                                 ( )
                                                            ( )
: --> blk @ 1+ load ;                                       ( )
                                                     -->    ( )
(  ---------------------------------------------------------  )
(  Test Harness Variables                                     )
(                                                             )
(  The test harness captures the depth of the stack before    )
(  the test is run. After the subject code is executed, the   )
(  depth of the stack is checked against this and any new     )
( values are saved for comparison during verification.        )
                                                            ( )
variable start-depth                                        ( )
                                                            ( )
variable actual-depth                                       ( )
                                                            ( )
create actual-results 32 cells allot                        ( )
                                                            ( )
                                                            ( )
                                                     -->    ( )
(  ---------------------------------------------------------  )
(  Test Harness Part 1                                        )
(                                                             )
: t{ depth start-depth ! ;                                  ( )
                                                            ( )
: ->                                                        ( )
    depth dup actual-depth !                                ( )
    start-depth @ >                                         ( )
    if                                                      ( )
        depth start-depth @ - 0                             ( )
        do                                                  ( )
            actual-results i cells + !                      ( )
        loop                                                ( )
    then                                                    ( )
;                                                           ( )
                                                     -->    ( )
(  ---------------------------------------------------------  )
(  Test Harness Part 2                                        )
(                                                           ( )
: check-results                                             ( )
    depth start-depth @ >                                   ( )
    if                                                      ( )
        depth start-depth @ - 0                             ( )
        do                                                  ( )
            actual-results i cells + @ <>                   ( )
            if                                              ( )
                ." incorrect result"                        ( )
                leave                                       ( )
            then                                            ( )
        loop                                                ( )
    then                                                    ( )
;                                                    -->    ( )
(  ---------------------------------------------------------  )
(  Test Harness Part 3                                        )
(                                                           ( )
: }t                                                        ( )
    depth actual-depth @ =                                  ( )
    if                                                      ( )
        check-results 46 emit                               ( )
    else                                                    ( )
        ." wrong number of results."                        ( )
    then                                                    ( )
;                                                           ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                     -->    ( )
(  ---------------------------------------------------------  )
(  Suite Control Functions                                    )
                                                            ( )
: run-all-tests                                             ( )
  10 load                        ( tests the test harness     )
  11 load                        ( and not                    )
  12 load                        ( comments '                 )
  13 load                        ( *                          )
  14 load                        ( +                          )
  15 load                        ( here , ! @                 )
  17 load                        ( +!                         )
  18 load                        ( +loop                      )
                                                            ( )
                                                            ( )
  cr                                                        ( )
;                                                           ( )
(  ---------------------------------------------------------  )
(  Harness Tests                                              )
                                                            ( )
." Testing the test harness: "                           cr ( )
." The next line should say 'incorrect result'"          cr ( )
t{ 1 2 swap -> 1 2 }t                                 cr cr ( )
                                                            ( )
." The next line should say 'wrong number of results.'"  cr ( )
t{ 1 2 swap -> 1 2 1 }t                               cr cr ( )
                                                            ( )
." The next line should just be a period."               cr ( )
t{ 1 2 swap -> 2 1 }t                                 cr cr ( )
                                                            ( )
." Test harness tests complete. "                     cr cr ( )
                                                            ( )
                                                            ( )
(  ---------------------------------------------------------  )
(  Core Tests: and not                                        )
                                                            ( )
." Core tests: and not "                                    ( )
                                                            ( )
t{ 0 0 and -> 0 }t                                          ( )
t{ 0 1 and -> 0 }t                                          ( )
t{ 1 0 and -> 0 }t                                          ( )
t{ 1 1 and -> 1 }t                                          ( )
t{ 0 not 1 and -> 1 }t                                      ( )
t{ 1 not 1 and -> 0 }t                                      ( )
                                                            ( )
                                                            ( )
                                                            ( )
cr                                                          ( )
                                                            ( )
(  ---------------------------------------------------------  )
(  Core Tests: comments tick                                  )
                                                            ( )
." Core tests: comments "                                   ( )
                                                            ( )
t{ ( a comment)1234 -> 1234 }t                              ( )
t{ : pc1 ( a comment)1234 ; pc1 -> 1234 }t                  ( )
                                                            ( )
cr                                                          ( )
                                                            ( )
." Core tests: tick "                                       ( )
                                                            ( )
( t{ : gt1 123 ;   ->     }t                                ( )
( t{ ' gt1 execute -> 123 }t                                ( )
                                                            ( )
cr                                                          ( )
(  ---------------------------------------------------------  )
(  Core Tests: *                                              )
                                                            ( )
." Core tests: * "                                          ( )
                                                            ( )
t{  0  0 * ->  0 }t                                         ( )
t{  0  1 * ->  0 }t                                         ( )
t{  1  0 * ->  0 }t                                         ( )
t{  1  2 * ->  2 }t                                         ( )
t{  2  1 * ->  2 }t                                         ( )
t{  3  3 * ->  9 }t                                         ( )
t{ -3  3 * -> -9 }t                                         ( )
t{  3 -3 * -> -9 }t                                         ( )
t{ -3 -3 * ->  9 }t                                         ( )
                                                            ( )
cr                                                          ( )
(  ---------------------------------------------------------  )
(  Core Tests: +                                              )
                                                            ( )
." Core tests: + "                                          ( )
                                                            ( )
t{  0  5 + ->  5 }t                                         ( )
t{  5  0 + ->  5 }t                                         ( )
t{  0 -5 + -> -5 }t                                         ( )
t{ -5  0 + -> -5 }t                                         ( )
t{  1  2 + ->  3 }t                                         ( )
t{  1 -2 + -> -1 }t                                         ( )
t{ -1  2 + ->  1 }t                                         ( )
t{ -1 -2 + -> -3 }t                                         ( )
t{ -1  1 + ->  0 }t                                         ( )
                                                            ( )
cr                                                          ( )
(  ---------------------------------------------------------  )
(  Core Tests: here , ! @                                     )
                                                            ( )
." Core tests: here , ! @ "                                 ( )
                                                            ( )
here 1 ,                                                    ( )
here 2 ,                                                    ( )
constant 2nd                                                ( )
constant 1st                                                ( )
                                                            ( )
t{       1st 2nd <  -> 1 2 < }t  ( here must grow with allot  )
t{       1st cell+  -> 2nd   }t  ( ... by one cell            )
t{   1st 1 cells +  -> 2nd   }t                             ( )
t{     1st @ 2nd @  -> 1 2   }t                             ( )
t{         5 1st !  ->       }t                             ( )
                                                     -->    ( )
(  ---------------------------------------------------------  )
(  Core Tests: here , ! @ [continued]                         )
                                                            ( )
t{     1st @ 2nd @  -> 5 2   }t                             ( )
t{         6 2nd !  ->       }t                             ( )
t{     1st @ 2nd @  -> 5 6   }t                             ( )
t{ 1   1st ! 1st @  -> 1     }t  ( can store cell-wide value  )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
cr                                                          ( )
(  ---------------------------------------------------------  )
(  Core Tests: +!                                             )
                                                            ( )
." Core tests: +! "                                         ( )
                                                            ( )
t{  0 1st !        ->   }t                                  ( )
t{  1 1st +!       ->   }t                                  ( )
t{    1st @        -> 1 }t                                  ( )
t{ -1 1st +! 1st @ -> 0 }t                                  ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
cr                                                          ( )
(  ---------------------------------------------------------  )
(  Core Tests: +loop                                          )
                                                            ( )
." Core tests: +loop "                                      ( )
                                                            ( )
t{ : gd2 do i -1 +loop ; -> }t                              ( )
t{  1 4 gd2 -> 4 3 2  1 }t                                  ( )
t{ -1 2 gd2 -> 2 1 0 -1 }t                                  ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                     -->    ( )
(  ---------------------------------------------------------  )
(  Core Tests: +loop [continued]                              )
                                                            ( )
variable gditerations                                       ( )
variable gdincrement                                        ( )
                                                            ( )
: gd7 ( limit start increment -- )                          ( )
    gdincrement !                                           ( )
    0 gditerations !                                        ( )
    do                                                      ( )
        1 gditerations +!                                   ( )
        i                                                   ( )
        gditerations @ 6 = if leave then                    ( )
        gdincrement @                                       ( )
    +loop gditerations @                                    ( )
;                                                    -->    ( )
(  ---------------------------------------------------------  )
(  Core Tests: +loop [continued]                              )
                                                            ( )
t{    4  4  -1 gd7 ->  4                  1  }t             ( )
t{    1  4  -1 gd7 ->  4  3  2  1         4  }t             ( )
t{    4  1  -1 gd7 ->  1  0 -1 -2  -3  -4 6  }t             ( )
t{    4  1   0 gd7 ->  1  1  1  1   1   1 6  }t             ( )
t{    0  0   0 gd7 ->  0  0  0  0   0   0 6  }t             ( )
t{    1  4   0 gd7 ->  4  4  4  4   4   4 6  }t             ( )
t{    1  4   1 gd7 ->  4  5  6  7   8   9 6  }t             ( )
t{    4  1   1 gd7 ->  1  2  3            3  }t             ( )
t{    4  4   1 gd7 ->  4  5  6  7   8   9 6  }t             ( )
t{    2 -1  -1 gd7 -> -1 -2 -3 -4  -5  -6 6  }t             ( )
t{   -1  2  -1 gd7 ->  2  1  0 -1         4  }t             ( )
t{    2 -1   0 gd7 -> -1 -1 -1 -1  -1  -1 6  }t             ( )
                                                     -->    ( )
(  ---------------------------------------------------------  )
(  Core Tests: +loop [continued]                              )
                                                            ( )
t{   -1  2   0 gd7 ->  2  2  2  2   2   2 6  }t             ( )
t{   -1  2   1 gd7 ->  2  3  4  5   6   7 6  }t             ( )
t{    2 -1   1 gd7 -> -1 0 1              3  }t             ( )
t{  -20 30 -10 gd7 -> 30 20 10  0 -10 -20 6  }t             ( )
t{  -20 31 -10 gd7 -> 31 21 11  1  -9 -19 6  }t             ( )
t{  -20 29 -10 gd7 -> 29 19  9 -1 -11     5  }t             ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
                                                            ( )
cr                                                          ( )
(  ---------------------------------------------------------  )
(  Core Tests:                                                )
                                                            ( )
                                                            ( )
                                                            ( )